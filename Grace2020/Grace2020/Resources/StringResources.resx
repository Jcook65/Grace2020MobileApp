<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>ABOUT</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>CONTACT US</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="DarkMode" xml:space="preserve">
    <value>Dark Mode</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>EVENTS</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>HOME</value>
  </data>
  <data name="InfoCAP" xml:space="preserve">
    <value>INFO</value>
  </data>
  <data name="Japanese" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="JumpBackIn" xml:space="preserve">
    <value>Jump back in</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>MORE INFO</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>NEWS</value>
  </data>
  <data name="NoEvents" xml:space="preserve">
    <value>Currently there are no events, sorry!</value>
  </data>
  <data name="NoInformationAvailable" xml:space="preserve">
    <value>Sorry, but there is no information available at this time</value>
  </data>
  <data name="NoMoreInfoAvailable" xml:space="preserve">
    <value>No more info available at this time.</value>
  </data>
  <data name="NoPrayerAvailable" xml:space="preserve">
    <value>There is no prayer available at this time. Please try again later.</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OurVision" xml:space="preserve">
    <value>OUR VISION</value>
  </data>
  <data name="Prayer" xml:space="preserve">
    <value>Prayer</value>
  </data>
  <data name="PrayerCAP" xml:space="preserve">
    <value>PRAYER</value>
  </data>
  <data name="PrayerModules" xml:space="preserve">
    <value>Prayer Modules:</value>
  </data>
  <data name="Prefecture" xml:space="preserve">
    <value>Prefecture</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="RegionCAP" xml:space="preserve">
    <value>REGION</value>
  </data>
  <data name="SearchForPrefecture" xml:space="preserve">
    <value>Search for a Prefecture</value>
  </data>
  <data name="Topics" xml:space="preserve">
    <value>Topics</value>
  </data>
  <data name="VisionStatement" xml:space="preserve">
    <value>The Olympic Torch motto is "Hope Lights Our Way." The Holy Spirit led Moses and the Israelites through the desert as a pillar of fire. The fire not only “lit the way” through the desert but represented the promise of things to come. In the day of Pentecost, tongues of fire came down on people and continue to move throughout the world among the people of every language, tribe, and nation. Since arriving in Japan in March of 2020, the Olympic Torch (“Holy Fire” in Japanese) has been waiting to be carried across the nation. Join us in prayer for thousands of people to carry the fire of the Holy Spirit through every region of Japan.
Please join us in praying through the GRACE2020 campaign, 90 days of prayer. The Tokyo 2020 Summer Olympics and Paralympics were planned to celebrate and support continued recovery from the 2011 Great East Japan Earthquake and Tsunami. Now as we mark the 10 year anniversary of 3/11 and celebrate the Olympics one year late, we remember the pillar and tongues of fire. Hope lights the way through desert and darkness. Please pray for God to spread the light of the Gospel for the sake of his glory. Pray for the Holy Spirit to powerfully sweep across Japan. Pray for Christ to reveal himself to more and more people, that they would know him as the light that gives true hope and life to the world.
The blue of this app is "Japan blue," treasured by Japanese people since the 7th century.</value>
  </data>
  <data name="WebLinkError" xml:space="preserve">
    <value>I'm sorry, there was an issue opening this link.</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
</root>