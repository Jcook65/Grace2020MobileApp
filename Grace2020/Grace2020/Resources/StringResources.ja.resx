<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>約</value>
  </data>
  <data name="ContactUs" xml:space="preserve">
    <value>お問い合わせ</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>継続する</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>英語</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>イベント</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="Japanese" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="MoreInfo" xml:space="preserve">
    <value>より詳しい情報</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>ニュース</value>
  </data>
  <data name="NoEvents" xml:space="preserve">
    <value>現在、イベントはありません。ごめんなさい！</value>
  </data>
  <data name="NoInformationAvailable" xml:space="preserve">
    <value>申し訳ありませんが、現時点で利用可能な情報はありません</value>
  </data>
  <data name="NoMoreInfoAvailable" xml:space="preserve">
    <value>現在、これ以上の情報はありません</value>
  </data>
  <data name="NoPrayerAvailable" xml:space="preserve">
    <value>現在、祈りはありません</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OurVision" xml:space="preserve">
    <value>私たちのビジョン</value>
  </data>
  <data name="Prayer" xml:space="preserve">
    <value>祈り</value>
  </data>
  <data name="PrayerCAP" xml:space="preserve">
    <value>祈り</value>
  </data>
  <data name="PrayerModules" xml:space="preserve">
    <value>祈りのモジュール</value>
  </data>
  <data name="Prefecture" xml:space="preserve">
    <value>県</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>領域</value>
  </data>
  <data name="RegionCAP" xml:space="preserve">
    <value>領域</value>
  </data>
  <data name="SearchForPrefecture" xml:space="preserve">
    <value>都道府県を検索する</value>
  </data>
  <data name="VisionStatement" xml:space="preserve">
    <value>オリンピック聖火が日本のすべての地域を通過するように、私たちは６月９日から９月６日まで「GRACE２０２０〜９０日間の祈り〜」キャンペーンを行います。日本のあらゆる場所で聖霊が働くように祈ります。聖霊が火の柱としてモーセとイスラエル人を砂漠に導いたと聖書に書いてあります。そして五旬節の日に聖霊が火の舌として人々のところに来て、多くの言語で話せるようにしました。この火は、神の民を通して、あらゆる国民、部族、民族、言語に広がっています。日本各地で1万人がオリンピック聖火を運ぶのは、神の民が日本のあらゆる地域で聖霊を運ぶことをイメージさせます。

聖霊が日本で働くように祈ってください。神がオリンピックのエネルギーと興奮を通して、福音のメッセージを広めるように祈ってください。真の希望と命を与える光を多くの人々が知るように祈ってください。</value>
  </data>
  <data name="WeblinkError" xml:space="preserve">
    <value>申し訳ありませんが、このリンクを開くときに問題が発生しました。</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>ようこそ</value>
  </data>
</root>